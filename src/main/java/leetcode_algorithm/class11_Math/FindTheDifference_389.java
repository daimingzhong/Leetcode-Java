package leetcode_algorithm.class11_Math;

/*

389. Find the Difference

Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

 */

import java.util.HashMap;
import java.util.Map;

public class FindTheDifference_389 {
    public static char findTheDifference(String s, String t) {
        char res = 'a';
        HashMap<Character, Integer> hashMap = new HashMap<>();
        char[] tt = t.toCharArray();
        for(char i : tt) {
            if(hashMap.containsKey(i)) {
                hashMap.put(i, hashMap.get(i) + 1);
            } else{
                hashMap.put(i, 1);
            }
        }
        for(int i = 0; i<s.length(); i++) {
            hashMap.put(s.charAt(i), hashMap.get(s.charAt(i)) - 1);
        }
        for(Map.Entry<Character, Integer> entry : hashMap.entrySet()){
            if(entry.getValue() != 0) {
                res = entry.getKey();
            }
        }
        return res;
    }

    public char findTheDifference2(String s, String t) {// xor twice is it self.
        int n = t.length();
        char c = t.charAt(n - 1);
        for (int i = 0; i < n - 1; ++i) {
            c ^= s.charAt(i);
            c ^= t.charAt(i);
        }
        return c;
    }

    public char findTheDifference3(String s, String t) {// 26 length array.
        int[] alpha = new int[26];
        for (char c : s.toCharArray())  // first, input to array
            alpha[ c - 'a' ]++;
        for (char c : t.toCharArray()) { // second, delete
            int cur = alpha[c - 'a']--;
            if (cur < 0)
                return c;
        }
        return 0;
    }

        public static void main(String[] args) {
        char result = findTheDifference("abcd", "abcde");
        System.out.println(result);
    }
}
